'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
var ProductCart=function(){function ProductCart(){_classCallCheck(this,ProductCart);this.products=JSON.parse(localStorage.getItem('PRODUCTS'));if(!this.products){document.getElementById('cart').innerHTML='<h3 class="empty_cart">Ваша корзина пуста!</h3> <br>      <a class="back_to_shop_link" href="index.html">Вернуться в магазин </a>';$('#clear_button').hide();$('.total_sum').hide();$('#goTo_Form').hide();}
this.loadProducts();this.changeQuantity();this.totalPricecalc();this.deleteCart();}
_createClass(ProductCart,[{key:'loadProducts',value:function loadProducts(){var _this=this;var productsHtml=this.products.reduce(function(html,product,index){return html+=_this.generateProductHtml(product,index);},'');document.getElementById('cart').innerHTML=productsHtml;if(this.products.length==0){document.getElementById('cart').innerHTML='<h3 class="empty_cart">Ваша корзина пуста!</h3> <br>      <a class="back_to_shop_link" href="index.html">Вернуться в магазин </a>';$('#clear_button').hide();$('.total_sum').hide();$('#goTo_Form').hide();}}},{key:'deleteProduct',value:function deleteProduct(index){var mi=this;this.products.splice(index,1);localStorage.setItem('PRODUCTS',JSON.stringify(this.products));window.location.href="cart.html";this.loadProducts();}},{key:'changeQuantity',value:function changeQuantity(){$(document).ready(function(){$(this).find('.less_goods').click(function(){var $input=$(this).parent().find('input[name="product_quantity"]');var count=parseInt($input.val())-1;count=count<1?1:count;$input.val(count);$input.change();return false;});$(this).find('.more_goods').click(function(){var $input=$(this).parent().find('input[name="product_quantity"]');$input.val(parseInt($input.val())+1);$input.change();return false;});});}},{key:'deleteCart',value:function deleteCart(){var mi=this;$('#clear_button').click(function(e){this.products=[];localStorage.clear();mi.loadProducts();window.location.href="cart.html";});}},{key:'totalPricecalc',value:function totalPricecalc(){var total_sum_blocks=$('.total_price');var sum=0;$.each(total_sum_blocks,function(index,value){var prices=Number($(total_sum_blocks[index]).text());sum+=prices;});$('.total_sum').text("Всего на сумму: "+sum);}},{key:'calculate_price',value:function calculate_price(index){var mi=this;$('.products_in_cart').change(function(e){var current=e.target;var current_block=e.target.parentElement.parentElement;var currentId=$(current_block).find('.table_product_id').text();var currentQuantity=$(current_block).find('.products_in_cart').val();var price=$(current_block).find('.product_price').text();var current_amount=$(current).val();var total_product_price=Number(price)*Number(current_amount);$(current_block).find('.total_price').text(total_product_price);mi.totalPricecalc();var a=mi.findProductToUpdate(currentId);mi.updateCart(a,currentQuantity);});}},{key:'findProductToUpdate',value:function findProductToUpdate(currentId){var products=this.products;for(var a=0;a<products.length;a++){if(products[a].product_id==currentId){return a;}}}},{key:'updateCart',value:function updateCart(a,currentQuantity){this.products[a].product_quantity=currentQuantity;localStorage.setItem('PRODUCTS',JSON.stringify(this.products));}},{key:'generateProductHtml',value:function generateProductHtml(product,index,e){return'\n   \t<div class="container cart_section">\n      <div class="row products_row">\n      <div class="col-md-12">\n        <div class="col-md-3 cart_structure">\n        <p class="product_title"> '+this.products[index].product_title+' </p>\n         <p class="product_title"> \u0437\u0430 1000 \u0433 </p>         \n         </div>\n         <div class="col-sm-12 col-md-3 cart_structure">\n         <img class="product_in_cart image_product" src= '+this.products[index].product_image+' alt="\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0439 \u0442\u043E\u0432\u0430\u0440"/>\n         </div>\n         <div class="col-md-2 cart_structure">\n         \n         <span class="more_goods pluses2 table_quantity">+</span>\n         <input class="products_in_cart table_quantity" name="product_quantity" min="1" value='+Number(this.products[index].product_quantity)+' type="number"\n         onchange="cart.calculate_price('+index+')">\n         <span class="less_goods minus2 table_quantity">-</span>\n         <span class="table_product_id hidden">'+this.products[index].product_id+'</span>\n         </div>\n         <div class="col-md-2 cart_structure ">\n         <p class="product_price"> '+Number(this.products[index].product_price)+' </p>\n         </div>\n         <div class="col-md-2 cart_structure ">\n         <p class="data_table total_price"> '+Number(this.products[index].product_price)*Number(this.products[index].product_quantity)+' </p>\n         <button class="btn delete_product" onclick="cart.deleteProduct('+index+')">X</button>\n         </div>\n       </div> \n      </div>\n  </div>\n  ';}}]);return ProductCart;}();var cart=void 0;window.addEventListener("load",function(){cart=new ProductCart();});